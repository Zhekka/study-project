{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      postsData: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 15\n      }, {\n        id: 2,\n        message: 'This is my second post',\n        likesCount: 23\n      }, {\n        id: 3,\n        message: 'Hi everyone!',\n        likesCount: 67\n      }],\n      newPostText: '12'\n    },\n    messagePage: {\n      dialogsData: [{\n        id: 1,\n        name: 'Dima'\n      }, {\n        id: 2,\n        name: 'Andrey'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Anna'\n      }, {\n        id: 5,\n        name: 'Petro'\n      }],\n      messageData: [{\n        id: 1,\n        message: 'hi'\n      }, {\n        id: 2,\n        message: 'yo'\n      }, {\n        id: 3,\n        message: 'How are you?'\n      }, {\n        id: 4,\n        message: 'Do you know me?'\n      }, {\n        id: 5,\n        message: 'By by'\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log(\"State changed\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer; // патерн observer\n  },\n\n  dispatch(action) {\n    debugger;\n\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.postsData.unshift(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else {\n      console.log('missing despatch');\n    }\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["/Users/zheka/Desktop/projects/react-1/src/redux/state.js"],"names":["store","_state","profilePage","postsData","id","message","likesCount","newPostText","messagePage","dialogsData","name","messageData","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","unshift","newText"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE,CACP;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,kBAAjB;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OADO,EAEP;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,wBAAjB;AAA2CC,QAAAA,UAAU,EAAE;AAAvD,OAFO,EAGP;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,cAAjB;AAAiCC,QAAAA,UAAU,EAAE;AAA7C,OAHO,CADF;AAKTC,MAAAA,WAAW,EAAE;AALJ,KADT;AAQJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,WAAW,EAAE,CACT;AAACL,QAAAA,EAAE,EAAE,CAAL;AAAQM,QAAAA,IAAI,EAAE;AAAd,OADS,EAET;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQM,QAAAA,IAAI,EAAE;AAAd,OAFS,EAGT;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQM,QAAAA,IAAI,EAAE;AAAd,OAHS,EAIT;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQM,QAAAA,IAAI,EAAE;AAAd,OAJS,EAKT;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQM,QAAAA,IAAI,EAAE;AAAd,OALS,CADJ;AAOTC,MAAAA,WAAW,EAAE,CACT;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OADS,EAET;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAFS,EAGT;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAHS,EAIT;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAJS,EAKT;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OALS;AAPJ;AART,GADA;;AAwBRO,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GA1BO;;AA2BRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKd,MAAZ;AACH,GA7BO;;AA8BRe,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKL,eAAL,GAAuBK,QAAvB,CADgB,CACgB;AACnC,GAhCO;;AAmCRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb;;AACA,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAIC,OAAO,GAAG;AACVjB,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBK,WAFvB;AAGVD,QAAAA,UAAU,EAAE;AAHF,OAAd;;AAKA,WAAKL,MAAL,CAAYC,WAAZ,CAAwBC,SAAxB,CAAkCmB,OAAlC,CAA0CD,OAA1C;;AACA,WAAKpB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsC,EAAtC;;AACA,WAAKK,eAAL,CAAqB,KAAKX,MAA1B;AACH,KATD,MASO,IAAIkB,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC/C,WAAKnB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsCY,MAAM,CAACI,OAA7C;;AACA,WAAKX,eAAL,CAAqB,KAAKX,MAA1B;AACH,KAHM,MAIF;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AAGJ;;AAvDO,CAAZ;AA4DA,eAAed,KAAf","sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            postsData: [\n                {id: 1, message: 'Hi, how are you?', likesCount: 15},\n                {id: 2, message: 'This is my second post', likesCount: 23},\n                {id: 3, message: 'Hi everyone!', likesCount: 67}],\n            newPostText: '12'\n        },\n        messagePage: {\n            dialogsData: [\n                {id: 1, name: 'Dima'},\n                {id: 2, name: 'Andrey'},\n                {id: 3, name: 'Sveta'},\n                {id: 4, name: 'Anna'},\n                {id: 5, name: 'Petro'}],\n            messageData: [\n                {id: 1, message: 'hi'},\n                {id: 2, message: 'yo'},\n                {id: 3, message: 'How are you?'},\n                {id: 4, message: 'Do you know me?'},\n                {id: 5, message: 'By by'}]\n        }\n    },\n    _callSubscriber() {\n        console.log(\"State changed\");\n    },\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;// патерн observer\n    },\n\n\n    dispatch(action) {\n        debugger;\n        if (action.type === 'ADD-POST') {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                likesCount: 0\n            };\n            this._state.profilePage.postsData.unshift(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state)\n        }\n        else {\n            console.log('missing despatch')\n        }\n\n\n    }\n\n\n}\n\nexport default store;"]},"metadata":{},"sourceType":"module"}