{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  postsData: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 15\n  }, {\n    id: 2,\n    message: 'This is my second post',\n    likesCount: 23\n  }, {\n    id: 3,\n    message: 'Hi everyone!',\n    likesCount: 67\n  }],\n  newPostText: '',\n  profile: null,\n  status: '1212'\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          postsData: [...state.postsData, newPost],\n          newPostText: ''\n        };\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          profile: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n}; //thunks func\n\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    debugger;\n\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/zheka/Desktop/projects/react-1/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","message","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","newText","addPostActionCreator","setStatus","updateNewPostTextActionCreator","text","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\n\nlet initialState = {\n    postsData: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\n        {id: 2, message: 'This is my second post', likesCount: 23},\n        {id: 3, message: 'Hi everyone!', likesCount: 67}],\n    newPostText: '',\n    profile: null,\n    status: '1212'\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n                newPostText: ''\n            }\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, profile: action.status\n            }\n        }\n        default:\n            return state;\n\n    }\n\n}\n\nexport const addPostActionCreator = () => {\n    return {\n        type: ADD_POST\n    }\n}\n\nexport const setStatus = (status) => {\n    return {\n        type: SET_STATUS,\n        status\n    }\n}\n\n\nexport const updateNewPostTextActionCreator = (text) => {\n    return {\n        type: UPDATE_NEW_POST_TEXT,\n        newText: text\n    }\n}\nexport const setUserProfile = (profile) => {\n    return {\n        type: SET_USER_PROFILE,\n        profile\n    }\n}\n//thunks func\nexport const getUserProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId)\n        .then(response => {\n            dispatch(setUserProfile(response.data))\n        });\n}\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getStatus(userId)\n        .then(response => {\n            dispatch(setStatus(response.data))\n        })\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status)\n        .then(response => {\n            debugger;\n            if (response.data.resultCode === 0) {\n                dispatch(setStatus(status))\n            }\n        })\n}\n\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}