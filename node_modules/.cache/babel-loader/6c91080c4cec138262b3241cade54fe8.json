{"ast":null,"code":"var _jsxFileName = \"/Users/zheka/Desktop/projects/react-1/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setIsFetchingAC, setUsersAC, setUsersTotalCountAC, unFollowAC } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { getUsers } from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        // console.log(response.data.items)// response data\n        this.props.setIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n      //console.log(response.data.items)// response data\n      this.props.setIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n      console.log(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 42\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      users: this.props.users,\n      isFetching: this.props.isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unFollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         setIsFetchingAC:(isFetching)=>{\n//             dispatch(setIsFetchingAC(isFetching));\n//         }\n//\n//     }\n// } //or\n\n\nexport default connect(mapStateToProps, {\n  follow: followAC,\n  unfollow: unFollowAC,\n  setUsers: setUsersAC,\n  setCurrentPage: setCurrentPageAC,\n  setTotalUsersCount: setUsersTotalCountAC,\n  setIsFetching: setIsFetchingAC\n})(UsersContainer);","map":{"version":3,"sources":["/Users/zheka/Desktop/projects/react-1/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setCurrentPageAC","setIsFetchingAC","setUsersAC","setUsersTotalCountAC","unFollowAC","axios","Users","Preloader","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","setIsFetching","get","pageSize","withCredentials","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","console","log","render","isFetching","totalUsersCount","unfollow","follow","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,QADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,UAJJ,EAKIC,oBALJ,EAMIC,UANJ,QAOO,2BAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAczCC,aAdyC,GAcxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,UAA1B;AACA,WAAKC,KAAL,CAAWE,aAAX,CAAyB,IAAzB;AACAV,MAAAA,KAAK,CAACW,GAAN,CAAW,2DAA0DJ,UAAW,UAAS,KAAKC,KAAL,CAAWI,QAAS,EAA7G,EACI;AAACC,QAAAA,eAAe,EAAE;AAAlB,OADJ,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd;AACA,aAAKP,KAAL,CAAWE,aAAX,CAAyB,KAAzB;AACA,aAAKF,KAAL,CAAWQ,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACH,OANL;AAOH,KAxBwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,KAAL,CAAWE,aAAX,CAAyB,IAAzB;AACAP,IAAAA,QAAQ,CAAC,KAAKK,KAAL,CAAWY,WAAZ,EAAwB,KAAKZ,KAAL,CAAWI,QAAnC,CAAR,CAAqDE,IAArD,CAA0DC,QAAQ,IAAI;AAC9D;AACA,WAAKP,KAAL,CAAWE,aAAX,CAAyB,KAAzB;AACA,WAAKF,KAAL,CAAWQ,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACA,WAAKV,KAAL,CAAWa,kBAAX,CAA8BN,QAAQ,CAACE,IAAT,CAAcK,UAA5C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,IAAT,CAAcK,UAA1B;AAEH,KAPL;AAQH;;AAcDG,EAAAA,MAAM,GAAG;AAEL,wBACI,0CACK,KAAKjB,KAAL,CAAWkB,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IAD5C,eAEI,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKlB,KAAL,CAAWmB,eAAnC;AACO,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWI,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWY,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKd,aAH3B;AAIO,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWoB,QAJ5B;AAKO,MAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWqB,MAL1B;AAMO,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB,KANzB;AAOO,MAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWkB,UAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAaH;;AAzCwC;;AA4C7C,IAAIK,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHlB,IAAAA,QAAQ,EAAEoB,KAAK,CAACC,SAAN,CAAgBrB,QAFvB;AAGHe,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH9B;AAIHP,IAAAA,WAAW,EAAEY,KAAK,CAACC,SAAN,CAAgBb,WAJ1B;AAKHM,IAAAA,UAAU,EAAEM,KAAK,CAACC,SAAN,CAAgBP;AALzB,GAAP;AAOH,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAejC,OAAO,CAACsC,eAAD,EAAkB;AACpCF,EAAAA,MAAM,EAAEnC,QAD4B;AAEpCkC,EAAAA,QAAQ,EAAE7B,UAF0B;AAGpCiB,EAAAA,QAAQ,EAAEnB,UAH0B;AAIpCY,EAAAA,cAAc,EAAEd,gBAJoB;AAKpC0B,EAAAA,kBAAkB,EAAEvB,oBALgB;AAMpCY,EAAAA,aAAa,EAAEd;AANqB,CAAlB,CAAP,CAOZQ,cAPY,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    followAC,\n    setCurrentPageAC,\n    setIsFetchingAC,\n    setUsersAC,\n    setUsersTotalCountAC,\n    unFollowAC\n} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {getUsers} from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.setIsFetching(true)\n        getUsers(this.props.currentPage,this.props.pageSize).then(response => {\n                //console.log(response.data.items)// response data\n                this.props.setIsFetching(false)\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount)\n                console.log(response.data.totalCount)\n\n            });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.setIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\n            {withCredentials: true})\n            .then(response => {\n                // console.log(response.data.items)// response data\n                this.props.setIsFetching(false)\n                this.props.setUsers(response.data.items)\n            });\n    }\n\n    render() {\n\n        return (\n            <>\n                {this.props.isFetching ? <Preloader/> : null}\n                <Users totalUsersCount={this.props.totalUsersCount}\n                       pageSize={this.props.pageSize}\n                       currentPage={this.props.currentPage}\n                       onPageChanged={this.onPageChanged}\n                       unfollow={this.props.unfollow}\n                       follow={this.props.follow}\n                       users={this.props.users}\n                       isFetching={this.props.isFetching}/>\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unFollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         setIsFetchingAC:(isFetching)=>{\n//             dispatch(setIsFetchingAC(isFetching));\n//         }\n//\n//     }\n// } //or\n\nexport default connect(mapStateToProps, {\n    follow: followAC,\n    unfollow: unFollowAC,\n    setUsers: setUsersAC,\n    setCurrentPage: setCurrentPageAC,\n    setTotalUsersCount: setUsersTotalCountAC,\n    setIsFetching: setIsFetchingAC\n})(UsersContainer)"]},"metadata":{},"sourceType":"module"}