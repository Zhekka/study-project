{"ast":null,"code":"import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  //данные\n  return {\n    messagePage: state.messagePage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/zheka/Desktop/projects/react-1/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","Dialogs","sendMessageCreator","updateNewMessageBodyCreator","connect","mapStateToProps","state","messagePage","isAuth","auth","mapDispatchToProps","dispatch","updateNewMessageBody","body","sendMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,kBAAR,EAA4BC,2BAA5B,QAA8D,6BAA9D;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAAE;AAC/B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC5BF,MAAAA,QAAQ,CAACR,2BAA2B,CAACU,IAAD,CAA5B,CAAR;AACH,KAHE;AAIHC,IAAAA,WAAW,EAAE,MAAM;AACfH,MAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAYA,MAAMa,gBAAgB,GAAGX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CT,OAA7C,CAAzB;AAGA,eAAec,gBAAf","sourcesContent":["import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => { //данные\n    return {\n        messagePage: state.messagePage,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageBody: (body) => {\n            dispatch(updateNewMessageBodyCreator(body))\n        },\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        }\n    }\n}\n\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\n\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}